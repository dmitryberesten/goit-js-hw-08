{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAUH,SAASC,cAAc,4BACjCG,EAAmB,sBAGzBL,EAAKM,iBACH,SACA,EAAAR,EAAAS,WAASC,IAGP,MAAMC,EAAe,CAAEC,MAAOP,EAAMQ,MAAOC,QAASR,EAAQO,OAI5DE,aAAaC,QAAQT,EAAkBU,KAAKC,UAAUP,GAAA,GACrD,MAILT,EAAKM,iBAAiB,UAAUE,IAC9BA,EAAES,iBAGFC,QAAQC,IAAI,CAAET,MAAOP,EAAMQ,MAAOC,QAASR,EAAQO,QAEnDX,EAAKoB,QACLP,aAAaQ,WAAWhB,EAAA,IAI1B,MAcMiB,EAdO,CAAAC,IACX,IACE,MAAMC,EAAkBX,aAAaY,QAAQF,GAG7C,OAA2B,OAApBC,OAA2BE,EAAYX,KAAKY,MAAMH,EAK3D,CAJE,MAAOI,GAGPV,QAAQU,MAAM,oBAAqBA,EAAMhB,QAC3C,GAIkBiB,CAAKxB,GAIrBiB,IACFnB,EAAMQ,MAAQW,EAAYZ,MAC1BN,EAAQO,MAAQW,EAAYV","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from 'lodash';\n\n// Пошук елементів на сторінці\nconst form = document.querySelector('.feedback-form');\nconst email = document.querySelector('input[name=\"email\"]');\nconst message = document.querySelector('textarea[name=\"message\"]');\nconst LOCALSTORAGE_KEY = 'feedback-form-state'; // Ключ для сховища\n\n// Додаємо слухача події input до форми\nform.addEventListener(\n  'input',\n  throttle(e => {\n\n    // Об'єкт з полями email і message, у яких зберігаються поточні значення полів форми\n    const objectToSave = { email: email.value, message: message.value };\n\n    // Записування у локальне сховище об'єкта з полями.\n    // JSON.stringify - конвертування JS-значень у формат строки JSON.\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(objectToSave));\n  }, 500) // Оновлення сховища раз на 500 мілісекунд\n);\n\n// Додаємо слухача події submit до форми\nform.addEventListener('submit', e => {\n  e.preventDefault(); // відміна оновлення сторінки\n\n  // Виведення у консоль об'єкта з полями та їхніми поточними значеннями\n  console.log({ email: email.value, message: message.value });\n\n  form.reset(); // очищення поля форми\n  localStorage.removeItem(LOCALSTORAGE_KEY); // очищення сховища\n});\n\n// Метод load який буде абстрагувати повторюваний код перевірки помилок парса\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key); // ключ елемента сховища\n\n    // Якщо елемента немає - повернути undefined, інакше розпарсити елемент.\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n\n    // В разі помилки повернути повідомлення\n    console.error('Get state error: ', error.message);\n  }\n};\n\n// Присвоєння ключа до сховища через метод load\nconst storageData = load(LOCALSTORAGE_KEY);\n\n// Перевірка стану сховища.\n// Якщо  в сховищі є збережені дані - заповнити ними поля форми.\nif (storageData) {\n  email.value = storageData.email;\n  message.value = storageData.message;\n} // В іншому випадку поля будуть порожніми\n\n// Діма Берестень"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$form","document","querySelector","$945622fd0f572e60$var$email","$945622fd0f572e60$var$message","$945622fd0f572e60$var$LOCALSTORAGE_KEY","addEventListener","throttle","e","objectToSave","email","value","message","localStorage","setItem","JSON","stringify","preventDefault","console","log","reset","removeItem","$945622fd0f572e60$var$storageData","key","serializedState","getItem","undefined","parse","error","$945622fd0f572e60$var$load"],"version":3,"file":"03-feedback.48a8539d.js.map"}